(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{Urad:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return p})),t.d(n,"default",(function(){return j}));var o=t("Fcif"),a=t("+I+c"),l=t("/FXl"),s=t("TjRS"),r=t("ZFoC"),u=t("/EZU"),b=t("zkaj"),i=t("V9iR"),p=(t("aD51"),{});void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/packages/ui/src/Media/useMedia.mdx"}});var c={_frontmatter:p},d=s.a,m={name:"19midj6",styles:"padding:16px;"};function j(e){var n,t=e.components,j=Object(a.a)(e,["components"]);return Object(l.b)(d,Object(o.a)({},c,j,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"usemedia"},"useMedia"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"useMedia")," allows you to evaluate theme media queries at client runtime."),Object(l.b)("h2",{id:"use"},"Use"),Object(l.b)("pre",null,Object(l.b)("code",Object(o.a)({parentName:"pre"},{}),"import { useMedia } from '@rkta/ui';\n...\n\nconst MyFunctionComponent = () => {\n  const { phone } = useMedia();\n  return phone ? <MobileMenu /> : null;\n}\n")),Object(l.b)("h2",{id:"example"},"Example"),Object(l.b)(r.c,{__position:0,__code:"() => {\n  const { phone, tablet, laptop, desktop } = useMedia()\n  return (\n    <>\n      <h4>Resize window to see text changing:</h4>\n      <Paper css={{ padding: 16 }} rize={1}>\n        Your display mode is:\n        <strong>\n          {phone && 'Phone'}\n          {tablet && 'Tablet'}\n          {laptop && 'Laptop'}\n          {desktop && 'Desktop'}\n        </strong>\n      </Paper>\n    </>\n  )\n}",__scope:(n={props:j,DefaultLayout:s.a,Link:r.b,Playground:r.c,Props:r.d,Divider:u.a,Paper:b.a,useMedia:i.a},n.DefaultLayout=s.a,n._frontmatter=p,n),mdxType:"Playground"},(function(){var e=Object(i.a)(),n=e.phone,t=e.tablet,o=e.laptop,a=e.desktop;return Object(l.b)(React.Fragment,null,Object(l.b)("h4",null,"Resize window to see text changing:"),Object(l.b)(b.a,{css:m,rize:1,mdxType:"Paper"},"Your display mode is:",Object(l.b)("strong",null,n&&"Phone",t&&"Tablet",o&&"Laptop",a&&"Desktop")))})),Object(l.b)("h2",{id:"usemedia-returns-an-object-of"},"useMedia returns an object of:"),Object(l.b)("pre",null,Object(l.b)("code",Object(o.a)({parentName:"pre"},{}),"  phone: boolean | null;\n  tablet: boolean | null;\n  laptop: boolean | null;\n  desktop: boolean | null;\n  jumbotron: boolean | null;\n\n  atLeastPhone: boolean | null;\n  atLeastTablet: boolean | null;\n  atLeastLaptop: boolean | null;\n  atLeastDesktop: boolean | null;\n  atLeastJumbotron: boolean | null;\n\n  atMostPhone: boolean | null;\n  atMostTablet: boolean | null;\n  atMostLaptop: boolean | null;\n  atMostDesktop: boolean | null;\n  atMostJumbotron: boolean | null;\n")),Object(l.b)("p",null,"Mind that hook evaluates mediaqueries after react component mounts. Prior mount you expect all queries to be nulls."))}void 0!==j&&j&&j===Object(j)&&Object.isExtensible(j)&&!j.hasOwnProperty("__filemeta")&&Object.defineProperty(j,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/packages/ui/src/Media/useMedia.mdx"}}),j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-packages-ui-src-media-use-media-mdx-637e717c211b6e3ffe60.js.map