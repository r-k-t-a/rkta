{"version":3,"sources":["webpack:///../src/packages/ui/src/ArrowKeys/ArrowKeys.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","ArrowKeys","Divider","List","ListButton","ListTitle","rize","sans","vertical","fitAll","horizontalSpace","of","isMDXComponent"],"mappings":"ijBAUO,IAAMA,EAAe,Q,6NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,aADR,aAGA,0FACA,iBAAQ,CACN,GAAM,QADR,QAGA,0DACA,sBACE,kBAAIC,WAAW,MAAK,0BAAYA,WAAW,MAAvB,iBAApB,uBAAsG,0BAAYA,WAAW,MAAvB,aAAtG,aACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,OAApB,qCAEF,iBAAQ,CACN,GAAM,UADR,UAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,4CAIL,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,gRAAiRC,QAAS,CAC3TL,QACAH,kBACAS,eACAC,UACAC,cACAC,YACAC,SACAC,eACAC,eACCX,QAAQ,cACb,YAAC,IAAD,CAAMY,KAAM,EAAGC,MAAI,EAACb,QAAQ,QAC1B,YAAC,IAAD,CAAWc,UAAQ,EAACd,QAAQ,aAC1B,YAAC,IAAD,CAAWA,QAAQ,aAAnB,aACA,YAAC,IAAD,CAASe,QAAM,EAACC,gBAAiB,GAAIhB,QAAQ,YAC7C,YAAC,IAAD,CAAYA,QAAQ,cAApB,YACA,YAAC,IAAD,CAAYA,QAAQ,cAApB,YACA,YAAC,IAAD,CAAYA,QAAQ,cAApB,eAIF,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOiB,GAAIV,IAAWP,QAAQ,W,oNAKlCH,EAAWqB,gBAAiB","file":"component---src-packages-ui-src-arrow-keys-arrow-keys-mdx-35e385c9f682f21be025.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/se/www/maintined/rkta/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { ArrowKeys } from './ArrowKeys';\nimport { Divider } from '../Divider';\nimport { List, ListButton, ListTitle } from '../List';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"arrowkeys\"\n    }}>{`ArrowKeys`}</h1>\n    <p>{`ArrowKeys enable keyboard navigation for list and nav components.`}</p>\n    <h2 {...{\n      \"id\": \"note\"\n    }}>{`Note`}</h2>\n    <p>{`ArrowKeys has a few side-effects:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`aria-selected`}</inlineCode>{` is injected to all `}<inlineCode parentName=\"li\">{`validType`}</inlineCode>{` elements`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ref`}</inlineCode>{` is injected to selected element`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"import\"\n    }}>{`Import`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { ArrowKeys } from '@rkta/ui';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<List rize={1} sans>\\n  <ArrowKeys vertical>\\n    <ListTitle>Menu List</ListTitle>\\n    <Divider fitAll horizontalSpace={16} />\\n    <ListButton>Option 1</ListButton>\\n    <ListButton>Option 2</ListButton>\\n    <ListButton>Option 3</ListButton>\\n  </ArrowKeys>\\n</List>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ArrowKeys,\n      Divider,\n      List,\n      ListButton,\n      ListTitle\n    }} mdxType=\"Playground\">\n  <List rize={1} sans mdxType=\"List\">\n    <ArrowKeys vertical mdxType=\"ArrowKeys\">\n      <ListTitle mdxType=\"ListTitle\">Menu List</ListTitle>\n      <Divider fitAll horizontalSpace={16} mdxType=\"Divider\" />\n      <ListButton mdxType=\"ListButton\">Option 1</ListButton>\n      <ListButton mdxType=\"ListButton\">Option 2</ListButton>\n      <ListButton mdxType=\"ListButton\">Option 3</ListButton>\n    </ArrowKeys>\n  </List>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ArrowKeys} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}