{"version":3,"sources":["webpack:///../src/packages/ui/src/List/ListText/ListText.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Addon","Divider","List","ListItem","ListText","Trash","Wallet","style","backgroundColor","margin","padding","rize","sans","label","description","reverse","invisible","fitAll","main","of","isMDXComponent"],"mappings":"4UAaaA,G,UAAe,S,gOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,YADR,YAGA,qEACA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,gnBAAioBC,SAAO,GACzqBJ,QACAH,kBACAQ,eACAC,UACAC,UACAC,YACAC,SACAC,aACAC,aACAC,UACAC,YAXyqB,gBAYzqBhB,IAZyqB,EAazqBH,eAbyqB,GAcxqBoB,MAAO,CACRC,gBAAiB,OACjBC,QAAS,GACTC,QAAS,IACRhB,QAAQ,cACb,YAAC,IAAD,CAAMiB,KAAM,EAAGC,MAAI,EAAClB,QAAQ,QAC1B,YAAC,IAAD,CAAUmB,MAAM,YAAYC,YAAY,mBAAmBpB,QAAQ,aACnE,YAAC,IAAD,CAAUmB,MAAM,gBAAgBC,YAAY,mBAAmBC,SAAO,EAACrB,QAAQ,cAEjF,YAAC,IAAD,CAASsB,WAAS,EAACtB,QAAQ,YAC3B,YAAC,IAAD,CAAMiB,KAAM,EAAGC,MAAI,EAAClB,QAAQ,QAC1B,YAAC,IAAD,CAAUuB,QAAM,EAACvB,QAAQ,YACvB,YAAC,IAAD,CAAOA,QAAQ,SACb,YAAC,IAAD,CAAQA,QAAQ,YAElB,YAAC,IAAD,CAAUmB,MAAM,uBAAuBC,YAAY,mBAAmBpB,QAAQ,cAE5E,YAAC,IAAD,CAAUuB,QAAM,EAACvB,QAAQ,YAC/B,YAAC,IAAD,CAAOA,QAAQ,SACb,YAAC,IAAD,CAAQA,QAAQ,YAElB,YAAC,IAAD,CAAUmB,MAAM,0BAA0BC,YAAY,mBAAmBI,MAAI,EAACxB,QAAQ,aACtF,YAAC,IAAD,CAAOA,QAAQ,SACb,YAAC,IAAD,CAAOA,QAAQ,cAKf,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOyB,GAAIf,IAAUV,QAAQ,gB,8NAKjCH,EAAW6B,gBAAiB","file":"component---src-packages-ui-src-list-list-text-list-text-mdx-bf75c2cf064d2e6dcf32.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/se/www/rkt-a/rkta/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Addon } from '../../Addon';\nimport { Divider } from '../../Divider';\nimport { List } from '../List';\nimport { ListItem } from '../ListItem';\nimport { ListText } from './ListText';\nimport { Trash, Wallet } from '../../../../entypo/src';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"listtext\"\n    }}>{`ListText`}</h1>\n    <p>{`Use ListText to create multiline list items.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<List rize={1} sans>\\n  <ListText label=\\\"List text\\\" description=\\\"Some description\\\" />\\n  <ListText label=\\\"Reversed text\\\" description=\\\"Some description\\\" reverse />\\n</List>\\n<Divider invisible />\\n<List rize={1} sans>\\n  <ListItem fitAll>\\n    <Addon>\\n      <Wallet />\\n    </Addon>\\n    <ListText label=\\\"List text with Addon\\\" description=\\\"Some description\\\" />\\n  </ListItem>\\n  <ListItem fitAll>\\n    <Addon>\\n      <Wallet />\\n    </Addon>\\n    <ListText\\n      label=\\\"List text with 2 Addons\\\"\\n      description=\\\"Some description\\\"\\n      main\\n    />\\n    <Addon>\\n      <Trash />\\n    </Addon>\\n  </ListItem>\\n</List>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Addon,\n      Divider,\n      List,\n      ListItem,\n      ListText,\n      Trash,\n      Wallet,\n      DefaultLayout,\n      _frontmatter\n    }} style={{\n      backgroundColor: '#eee',\n      margin: -40,\n      padding: 40\n    }} mdxType=\"Playground\">\n  <List rize={1} sans mdxType=\"List\">\n    <ListText label=\"List text\" description=\"Some description\" mdxType=\"ListText\" />\n    <ListText label=\"Reversed text\" description=\"Some description\" reverse mdxType=\"ListText\" />\n  </List>\n  <Divider invisible mdxType=\"Divider\" />\n  <List rize={1} sans mdxType=\"List\">\n    <ListItem fitAll mdxType=\"ListItem\">\n      <Addon mdxType=\"Addon\">\n        <Wallet mdxType=\"Wallet\" />\n      </Addon>\n      <ListText label=\"List text with Addon\" description=\"Some description\" mdxType=\"ListText\" />\n    </ListItem>\n        <ListItem fitAll mdxType=\"ListItem\">\n  <Addon mdxType=\"Addon\">\n    <Wallet mdxType=\"Wallet\" />\n  </Addon>\n  <ListText label=\"List text with 2 Addons\" description=\"Some description\" main mdxType=\"ListText\" />\n  <Addon mdxType=\"Addon\">\n    <Trash mdxType=\"Trash\" />\n  </Addon>\n        </ListItem>\n  </List>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ListText} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}