{"version":3,"sources":["webpack:///../src/packages/ui/src/Select/Select.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","to","__position","__code","__scope","useState","Link","Playground","Props","Select","Addon","Divider","List","ListButton","ArrowKeys","Rocket","caption","defaultValue","formatValue","value","isSelected","makeSelectHandler","vertical","bgColor","onClick","state","setState","floatingAreaProps","align","blockLevel","floatingAreaContentProps","rize","onChange","console","log","onClose","onOpen","prepend","validTypes","of","isMDXComponent"],"mappings":"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","file":"component---src-packages-ui-src-select-select-mdx-d47ad9ddbf45a5c65944.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/se/www/rkt-a/rkta/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState } from 'react';\nimport { Link, Playground, Props } from 'docz';\nimport { Select } from './';\nimport { Addon } from '../Addon';\nimport { Divider } from '../Divider';\nimport { List, ListButton } from '../List';\nimport { ArrowKeys } from '../ArrowKeys';\nimport { Rocket } from '../../../entypo/src';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"select\"\n    }}>{`Select`}</h1>\n    <p>{`A fully customizable select control.`}</p>\n    <span>\n  See also:{' '}\n  <Link to=\"/src-packages-src-packages-ui-src-native-select-native-select\" mdxType=\"Link\">Native Select</Link>{' '}\n  component.\n    </span>\n    <h2 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic example`}</h2>\n    <Playground __position={1} __code={'<Select\\n  caption=\\\"Select\\\"\\n  defaultValue={1}\\n  formatValue={value => `Item ${value}`}\\n>\\n  {([isSelected, makeSelectHandler]) => (\\n    <List>\\n      <ArrowKeys vertical>\\n        <ListButton\\n          bgColor={isSelected(1) && \\'color1\\'}\\n          onClick={makeSelectHandler(1)}\\n        >\\n          Item 1\\n        </ListButton>\\n        <ListButton\\n          bgColor={isSelected(2) && \\'color2\\'}\\n          onClick={makeSelectHandler(2)}\\n        >\\n          Item 2\\n        </ListButton>\\n      </ArrowKeys>\\n    </List>\\n  )}\\n</Select>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Link,\n      Playground,\n      Props,\n      Select,\n      Addon,\n      Divider,\n      List,\n      ListButton,\n      ArrowKeys,\n      Rocket,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Select caption=\"Select\" defaultValue={1} formatValue={value => `Item ${value}`} mdxType=\"Select\">\n    {([isSelected, makeSelectHandler]) => <List mdxType=\"List\">\n        <ArrowKeys vertical mdxType=\"ArrowKeys\">\n          <ListButton bgColor={isSelected(1) && 'color1'} onClick={makeSelectHandler(1)} mdxType=\"ListButton\">\n            Item 1\n          </ListButton>\n          <ListButton bgColor={isSelected(2) && 'color2'} onClick={makeSelectHandler(2)} mdxType=\"ListButton\">\n            Item 2\n          </ListButton>\n        </ArrowKeys>\n      </List>}\n  </Select>\n    </Playground>\n    <h2 {...{\n      \"id\": \"controllable\"\n    }}>{`Controllable`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const [state, setState] = useState(1)\\n  return (\\n    <Select caption=\\\"Select\\\" value={state}>\\n      <List>\\n        <ArrowKeys vertical>\\n          <ListButton\\n            bgColor={state === 1 && \\'color1\\'}\\n            onClick={() => setState(1)}\\n          >\\n            Item 1\\n          </ListButton>\\n          <ListButton\\n            bgColor={state === 2 && \\'color2\\'}\\n            onClick={() => setState(2)}\\n          >\\n            Item 2\\n          </ListButton>\\n        </ArrowKeys>\\n      </List>\\n    </Select>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Link,\n      Playground,\n      Props,\n      Select,\n      Addon,\n      Divider,\n      List,\n      ListButton,\n      ArrowKeys,\n      Rocket,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [state, setState] = useState(1);\n        return <Select caption=\"Select\" value={state} mdxType=\"Select\">\n        <List mdxType=\"List\">\n          <ArrowKeys vertical mdxType=\"ArrowKeys\">\n            <ListButton bgColor={state === 1 && 'color1'} onClick={() => setState(1)} mdxType=\"ListButton\">\n              Item 1\n            </ListButton>\n            <ListButton bgColor={state === 2 && 'color2'} onClick={() => setState(2)} mdxType=\"ListButton\">\n              Item 2\n            </ListButton>\n          </ArrowKeys>\n        </List>\n      </Select>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"customized\"\n    }}>{`Customized`}</h2>\n    <Playground __position={3} __code={'<Select\\n  bgColor=\\\"primary\\\"\\n  caption=\\\"Select\\\"\\n  floatingAreaProps={{ align: \\'top-left\\', blockLevel: false }}\\n  floatingAreaContentProps={{ rize: 10 }}\\n  formatValue={value => `Item ${value}`}\\n  onChange={value => console.log(\\'onChange: \\', value)}\\n  onClose={() => console.log(\\'onClose\\')}\\n  onOpen={() => console.log(\\'onOpen\\')}\\n  prepend={\\n    <Addon>\\n      <Rocket />\\n    </Addon>\\n  }\\n  rize={1}\\n>\\n  {([isSelected, makeSelectHandler]) => (\\n    <List bgColor=\\\"primary1\\\">\\n      <ArrowKeys validTypes={[ListButton]} vertical>\\n        <ListButton\\n          bgColor={isSelected(1) && \\'color3\\'}\\n          onClick={makeSelectHandler(1)}\\n        >\\n          Item 1\\n        </ListButton>\\n        <ListButton\\n          bgColor={isSelected(2) && \\'color3\\'}\\n          onClick={makeSelectHandler(2)}\\n        >\\n          Item 2\\n        </ListButton>\\n      </ArrowKeys>\\n    </List>\\n  )}\\n</Select>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Link,\n      Playground,\n      Props,\n      Select,\n      Addon,\n      Divider,\n      List,\n      ListButton,\n      ArrowKeys,\n      Rocket,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Select bgColor=\"primary\" caption=\"Select\" floatingAreaProps={{\n        align: 'top-left',\n        blockLevel: false\n      }} floatingAreaContentProps={{\n        rize: 10\n      }} formatValue={value => `Item ${value}`} onChange={value => console.log('onChange: ', value)} onClose={() => console.log('onClose')} onOpen={() => console.log('onOpen')} prepend={<Addon mdxType=\"Addon\">\n        <Rocket mdxType=\"Rocket\" />\n      </Addon>} rize={1} mdxType=\"Select\">\n    {([isSelected, makeSelectHandler]) => <List bgColor=\"primary1\" mdxType=\"List\">\n        <ArrowKeys validTypes={[ListButton]} vertical mdxType=\"ArrowKeys\">\n          <ListButton bgColor={isSelected(1) && 'color3'} onClick={makeSelectHandler(1)} mdxType=\"ListButton\">\n            Item 1\n          </ListButton>\n          <ListButton bgColor={isSelected(2) && 'color3'} onClick={makeSelectHandler(2)} mdxType=\"ListButton\">\n            Item 2\n          </ListButton>\n        </ArrowKeys>\n      </List>}\n  </Select>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Select} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}