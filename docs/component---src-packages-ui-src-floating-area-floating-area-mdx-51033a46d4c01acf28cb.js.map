{"version":3,"sources":["webpack:///../src/packages/ui/src/FloatingArea/FloatingArea.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","useState","Link","Playground","Props","Button","Divider","List","ListTitle","ListButton","FloatingArea","active","setActive","target","setTarget","show","event","style","display","justifyContent","padding","bgColor","onClick","producer","offset","rize","nowrap","align","setState","onClose","blockLevel","css","of","isMDXComponent"],"mappings":"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","file":"component---src-packages-ui-src-floating-area-floating-area-mdx-51033a46d4c01acf28cb.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/se/www/maintined/rkta/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState } from 'react';\nimport { Link, Playground, Props } from 'docz';\nimport { Button } from '../Button';\nimport { Divider } from '../Divider';\nimport { List, ListTitle, ListButton } from '../List';\nimport { FloatingArea } from './FloatingArea';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"floating-area\"\n    }}>{`Floating Area`}</h1>\n    <p>{`Helper component used by `}<inlineCode parentName=\"p\">{`@rkta/ui`}</inlineCode>{` to attach stuff to a DOM Elements or a Window.`}</p>\n    <h2 {...{\n      \"id\": \"import\"\n    }}>{`Import`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { FloatingArea } from '@rkta/ui';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"element-mode\"\n    }}>{`Element mode`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [active, setActive] = useState(false)\\n  const [target, setTarget] = useState(null)\\n  const show = event => {\\n    setTarget(event.target)\\n    setActive(true)\\n  }\\n  return (\\n    <div\\n      style={{ display: \\'flex\\', justifyContent: \\'space-between\\', padding: 8 }}\\n    >\\n      <Button bgColor=\\\"primary\\\" onClick={show}>\\n        Target 1\\n      </Button>\\n      <Button bgColor=\\\"primary\\\" onClick={show}>\\n        Target 2\\n      </Button>\\n      <Button bgColor=\\\"primary\\\" onClick={show}>\\n        Target 3\\n      </Button>\\n      <FloatingArea producer={target} active={active} offset={8}>\\n        <List rize={1}>\\n          <ListTitle>Floating Area</ListTitle>\\n          <ListButton nowrap>Option 1</ListButton>\\n          <ListButton nowrap>Option 2</ListButton>\\n          <ListButton nowrap>Option 3</ListButton>\\n        </List>\\n      </FloatingArea>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Link,\n      Playground,\n      Props,\n      Button,\n      Divider,\n      List,\n      ListTitle,\n      ListButton,\n      FloatingArea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [active, setActive] = useState(false);\n        const [target, setTarget] = useState(null);\n\n        const show = event => {\n          setTarget(event.target);\n          setActive(true);\n        };\n\n        return <div style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          padding: 8\n        }}>\n        <Button bgColor=\"primary\" onClick={show} mdxType=\"Button\">\n          Target 1\n        </Button>\n        <Button bgColor=\"primary\" onClick={show} mdxType=\"Button\">\n          Target 2\n        </Button>\n        <Button bgColor=\"primary\" onClick={show} mdxType=\"Button\">\n          Target 3\n        </Button>\n        <FloatingArea producer={target} active={active} offset={8} mdxType=\"FloatingArea\">\n          <List rize={1} mdxType=\"List\">\n            <ListTitle mdxType=\"ListTitle\">Floating Area</ListTitle>\n            <ListButton nowrap mdxType=\"ListButton\">Option 1</ListButton>\n            <ListButton nowrap mdxType=\"ListButton\">Option 2</ListButton>\n            <ListButton nowrap mdxType=\"ListButton\">Option 3</ListButton>\n          </List>\n        </FloatingArea>\n      </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"window-mode\"\n    }}>{`Window mode`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [{ active, align }, setState] = useState({ active: false })\\n  const show = align => () => setState({ align, active: true })\\n  const close = () => setState({ active: false, align })\\n  return (\\n    <div>\\n      <div\\n        style={{\\n          display: \\'flex\\',\\n          justifyContent: \\'space-between\\',\\n          padding: 8,\\n        }}\\n      >\\n        <Button bgColor=\\\"primary\\\" onClick={show(\\'top-left\\')}>\\n          Top-left\\n        </Button>\\n        <Button bgColor=\\\"primary\\\" onClick={show(\\'top\\')}>\\n          Top\\n        </Button>\\n        <Button bgColor=\\\"primary\\\" onClick={show(\\'top-right\\')}>\\n          Top-right\\n        </Button>\\n      </div>\\n      <Divider />\\n      <div\\n        style={{\\n          display: \\'flex\\',\\n          justifyContent: \\'space-between\\',\\n          padding: 8,\\n        }}\\n      >\\n        <Button bgColor=\\\"primary\\\" onClick={show(\\'left\\')}>\\n          Left\\n        </Button>\\n        <Button bgColor=\\\"primary\\\" onClick={show()}>\\n          Center\\n        </Button>\\n        <Button bgColor=\\\"primary\\\" onClick={show(\\'right\\')}>\\n          Right\\n        </Button>\\n      </div>\\n      <Divider />\\n      <div\\n        style={{\\n          display: \\'flex\\',\\n          justifyContent: \\'space-between\\',\\n          padding: 8,\\n        }}\\n      >\\n        <Button bgColor=\\\"primary\\\" onClick={show(\\'bottom-left\\')}>\\n          Bottom-left\\n        </Button>\\n        <Button bgColor=\\\"primary\\\" onClick={show(\\'bottom\\')}>\\n          Bottom\\n        </Button>\\n        <Button bgColor=\\\"primary\\\" onClick={show(\\'bottom-right\\')}>\\n          Bottom-right\\n        </Button>\\n      </div>\\n      <FloatingArea\\n        active={active}\\n        align={align}\\n        offset={80}\\n        onClose={close}\\n        blockLevel\\n      >\\n        <List css={{ height: \\'100%\\' }} rize={1}>\\n          <ListTitle>Floating Area</ListTitle>\\n          <ListButton nowrap>Option 1</ListButton>\\n          <ListButton nowrap>Option 2</ListButton>\\n          <ListButton nowrap>Option 3</ListButton>\\n        </List>\\n      </FloatingArea>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Link,\n      Playground,\n      Props,\n      Button,\n      Divider,\n      List,\n      ListTitle,\n      ListButton,\n      FloatingArea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [{\n          active,\n          align\n        }, setState] = useState({\n          active: false\n        });\n\n        const show = align => () => setState({\n          align,\n          active: true\n        });\n\n        const close = () => setState({\n          active: false,\n          align\n        });\n\n        return <div>\n        <div style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            padding: 8\n          }}>\n          <Button bgColor=\"primary\" onClick={show('top-left')} mdxType=\"Button\">\n            Top-left\n          </Button>\n          <Button bgColor=\"primary\" onClick={show('top')} mdxType=\"Button\">\n            Top\n          </Button>\n          <Button bgColor=\"primary\" onClick={show('top-right')} mdxType=\"Button\">\n            Top-right\n          </Button>\n        </div>\n        <Divider mdxType=\"Divider\" />\n        <div style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            padding: 8\n          }}>\n          <Button bgColor=\"primary\" onClick={show('left')} mdxType=\"Button\">\n            Left\n          </Button>\n          <Button bgColor=\"primary\" onClick={show()} mdxType=\"Button\">\n            Center\n          </Button>\n          <Button bgColor=\"primary\" onClick={show('right')} mdxType=\"Button\">\n            Right\n          </Button>\n        </div>\n        <Divider mdxType=\"Divider\" />\n        <div style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            padding: 8\n          }}>\n          <Button bgColor=\"primary\" onClick={show('bottom-left')} mdxType=\"Button\">\n            Bottom-left\n          </Button>\n          <Button bgColor=\"primary\" onClick={show('bottom')} mdxType=\"Button\">\n            Bottom\n          </Button>\n          <Button bgColor=\"primary\" onClick={show('bottom-right')} mdxType=\"Button\">\n            Bottom-right\n          </Button>\n        </div>\n        <FloatingArea active={active} align={align} offset={80} onClose={close} blockLevel mdxType=\"FloatingArea\">\n          <List css={{\n              height: '100%'\n            }} rize={1} mdxType=\"List\">\n            <ListTitle mdxType=\"ListTitle\">Floating Area</ListTitle>\n            <ListButton nowrap mdxType=\"ListButton\">Option 1</ListButton>\n            <ListButton nowrap mdxType=\"ListButton\">Option 2</ListButton>\n            <ListButton nowrap mdxType=\"ListButton\">Option 3</ListButton>\n          </List>\n        </FloatingArea>\n      </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={FloatingArea} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}