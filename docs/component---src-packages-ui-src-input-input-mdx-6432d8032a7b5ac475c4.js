(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{sn8f:function(t,n,e){"use strict";e.r(n),e.d(n,"_frontmatter",(function(){return l})),e.d(n,"default",(function(){return d}));var o=e("Fcif"),i=e("+I+c"),p=e("/FXl"),u=e("TjRS"),a=e("ZFoC"),r=e("2/Je"),s=e("nvLW"),l=(e("aD51"),{});void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/packages/ui/src/Input/Input.mdx"}});var c={_frontmatter:l},b=u.a;function d(t){var n,e,d,m,y=t.components,L=Object(i.a)(t,["components"]);return Object(p.b)(b,Object(o.a)({},c,L,{components:y,mdxType:"MDXLayout"}),Object(p.b)("h1",{id:"input"},"Input"),Object(p.b)("p",null,"Allows creating both single and multiline inputs with optional suggest popover."),Object(p.b)("h2",{id:"import"},"Import"),Object(p.b)("pre",null,Object(p.b)("code",Object(o.a)({parentName:"pre"},{className:"language-javascript"}),"import { Input } from '@rkta/ui';\n")),Object(p.b)("h2",{id:"basic-example"},"Basic Example"),Object(p.b)(a.c,{__position:0,__code:'<Input caption="Text Input" />',__scope:(n={props:L,DefaultLayout:u.a,Link:a.b,Playground:a.c,Props:a.d,Addon:r.Addon,ArrowKeys:r.ArrowKeys,Input:r.Input,List:r.List,ListTitle:r.ListTitle,ListButton:r.ListButton,New:s.a},n.DefaultLayout=u.a,n._frontmatter=l,n),mdxType:"Playground"},Object(p.b)(r.Input,{caption:"Text Input",mdxType:"Input"})),Object(p.b)("h2",{id:"suggest-example"},"Suggest Example"),Object(p.b)(a.c,{__position:1,__code:"<Input caption=\"Suggest Input\">\n  {({ value, setValue }) => {\n    const search = option =>\n      !value || option.toLowerCase().includes(value.toLowerCase())\n    const options = ['London', 'Paris', 'New York'].filter(search)\n    const title = options.length ? 'Suggestions' : 'No Suggestions'\n    return (\n      <List rize={1}>\n        <ListTitle>{title}</ListTitle>\n        <ArrowKeys vertical>\n          {options.map(option => (\n            <ListButton key={option} onClick={() => setValue(option)}>\n              {option}\n            </ListButton>\n          ))}\n        </ArrowKeys>\n      </List>\n    )\n  }}\n</Input>",__scope:(e={props:L,DefaultLayout:u.a,Link:a.b,Playground:a.c,Props:a.d,Addon:r.Addon,ArrowKeys:r.ArrowKeys,Input:r.Input,List:r.List,ListTitle:r.ListTitle,ListButton:r.ListButton,New:s.a},e.DefaultLayout=u.a,e._frontmatter=l,e),mdxType:"Playground"},Object(p.b)(r.Input,{caption:"Suggest Input",mdxType:"Input"},(function(t){var n=t.value,e=t.setValue,o=["London","Paris","New York"].filter((function(t){return!n||t.toLowerCase().includes(n.toLowerCase())})),i=o.length?"Suggestions":"No Suggestions";return Object(p.b)(r.List,{rize:1,mdxType:"List"},Object(p.b)(r.ListTitle,{mdxType:"ListTitle"},i),Object(p.b)(r.ArrowKeys,{vertical:!0,mdxType:"ArrowKeys"},o.map((function(t){return Object(p.b)(r.ListButton,{key:t,onClick:function(){return e(t)},mdxType:"ListButton"},t)}))))}))),Object(p.b)("h2",{id:"examples"},"Examples"),Object(p.b)(a.c,{__position:2,__code:'<Input caption="Tiny" tiny outline={1} />\n<br />\n<Input caption="Small" small />\n<br />\n<Input caption="Normal" />\n<br />\n<Input caption="Disabled" disabled />\n<br />\n<Input caption="Read Only" readOnly />\n<br />\n<Input caption="Big" big fancy fitAll color="error" />\n<br />\n<Input\n  append={\n    <Addon>\n      <New />\n    </Addon>\n  }\n  caption="Huge"\n  huge\n  rize={3}\n  color="secondary"\n  outline={2}\n/>',__scope:(d={props:L,DefaultLayout:u.a,Link:a.b,Playground:a.c,Props:a.d,Addon:r.Addon,ArrowKeys:r.ArrowKeys,Input:r.Input,List:r.List,ListTitle:r.ListTitle,ListButton:r.ListButton,New:s.a},d.DefaultLayout=u.a,d._frontmatter=l,d),mdxType:"Playground"},Object(p.b)(r.Input,{caption:"Tiny",tiny:!0,outline:1,mdxType:"Input"}),Object(p.b)("br",null),Object(p.b)(r.Input,{caption:"Small",small:!0,mdxType:"Input"}),Object(p.b)("br",null),Object(p.b)(r.Input,{caption:"Normal",mdxType:"Input"}),Object(p.b)("br",null),Object(p.b)(r.Input,{caption:"Disabled",disabled:!0,mdxType:"Input"}),Object(p.b)("br",null),Object(p.b)(r.Input,{caption:"Read Only",readOnly:!0,mdxType:"Input"}),Object(p.b)("br",null),Object(p.b)(r.Input,{caption:"Big",big:!0,fancy:!0,fitAll:!0,color:"error",mdxType:"Input"}),Object(p.b)("br",null),Object(p.b)(r.Input,{append:Object(p.b)(r.Addon,{mdxType:"Addon"},Object(p.b)(s.a,{mdxType:"New"})),caption:"Huge",huge:!0,rize:3,color:"secondary",outline:2,mdxType:"Input"})),Object(p.b)("h2",{id:"multiline-input"},"Multiline Input"),Object(p.b)(a.c,{__position:3,__code:'<Input\n  autoHeight\n  multiline\n  caption="Multiline"\n  bgColor="color3"\n  rize={1}\n  maxRows={4}\n/>',__scope:(m={props:L,DefaultLayout:u.a,Link:a.b,Playground:a.c,Props:a.d,Addon:r.Addon,ArrowKeys:r.ArrowKeys,Input:r.Input,List:r.List,ListTitle:r.ListTitle,ListButton:r.ListButton,New:s.a},m.DefaultLayout=u.a,m._frontmatter=l,m),mdxType:"Playground"},Object(p.b)(r.Input,{autoHeight:!0,multiline:!0,caption:"Multiline",bgColor:"color3",rize:1,maxRows:4,mdxType:"Input"})),Object(p.b)("h2",{id:"props"},"Props"),Object(p.b)(a.d,{of:r.Input,mdxType:"Props"}))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/packages/ui/src/Input/Input.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-packages-ui-src-input-input-mdx-6432d8032a7b5ac475c4.js.map